{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AddMessageForm.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","avatar","name","message","time","className","s","src","alt","angle","content","text","AddMessageForm","addMessage","handleKeyDown","React","useState","setMessage","input","onKeyPress","e","textarea","value","onChange","currentTarget","disabled","length","onClick","button","messageData","id","v1","HW1","post","setPost","setTime","useEffect","getCurrentTime","today","Date","getHours","getMinutes","getSeconds","map","m","key","charCode","Affair","affair","deleteAffairCallback","priorityClass","block","priority","wrapper","title","btn","_id","Affairs","data","setFilter","mappedAffairs","a","filterBtn","defaultAffairs","HW2","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","handlerBlurCallback","inputClass","disable","onBlur","textError","GreetingContainer","users","addUserCallback","setName","setError","alert","HW3","setUsers","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","HW4","setText","showAlert","checked","setChecked","column","blue","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.60ba87d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1DYyw\",\"avatar\":\"Message_avatar__17Qsh\",\"content\":\"Message_content__1nuuv\",\"angle\":\"Message_angle__2zuKP\",\"text\":\"Message_text__2raXJ\",\"name\":\"Message_name__xtks4\",\"time\":\"Message_time__1uRUP\",\"textarea\":\"Message_textarea__2ULEH\",\"input\":\"Message_input__3cHM7\",\"button\":\"Message_button__2iuWE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affairs_wrapper__1tytd\",\"title\":\"Affairs_title__8TeCE\",\"priority\":\"Affairs_priority__oRApY\",\"high\":\"Affairs_high__1YL_R\",\"low\":\"Affairs_low__ngI3F\",\"middle\":\"Affairs_middle__1UYkU\",\"btn\":\"Affairs_btn__2Ck_H\",\"filterBtn\":\"Affairs_filterBtn___aVZ3\",\"block\":\"Affairs_block__2p66C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Greeting_wrapper__uwyTg\",\"btn\":\"Greeting_btn__15L6W\",\"error\":\"Greeting_error__2Symh\",\"inputClass\":\"Greeting_inputClass__3b_j-\",\"value\":\"Greeting_value__3TFFl\",\"textError\":\"Greeting_textError__35c-P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1Jv6E\",\"errorInput\":\"SuperInputText_errorInput__3PN-L\",\"error\":\"SuperInputText_error__1daK7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__190th\",\"column\":\"HW4_column__LlIdO\",\"testSpanError\":\"HW4_testSpanError__3d56T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3scjI\",\"red\":\"SuperButton_red__VApYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2Vf3O\",\"spanClassName\":\"SuperCheckbox_spanClassName__2OKGt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1i7I6\"};","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\ninterface MessageType {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string | null,\r\n}\r\n\r\nconst Message: React.FC<MessageType> = ({avatar, name, message, time}) => {\r\n\r\n    return (\r\n        <div className={s.message}>\r\n            <img className={s.avatar} src={avatar} alt='avatar'/>\r\n            <div className={s.angle}></div>\r\n            <div className={s.content}>\r\n                <h1 className={s.name}>{name}</h1>\r\n                <div className={s.text}>{message}</div>\r\n                <div className={s.time}> {time} </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from './Message.module.css'\r\n\r\ninterface AddMessageFormPropsType {\r\n    addMessage: (message: string) => void\r\n    handleKeyDown: (e: React.KeyboardEvent<HTMLTextAreaElement>, text: string) => void\r\n}\r\n\r\nconst AddMessageForm: React.FC<AddMessageFormPropsType> = ({addMessage, handleKeyDown}) => {\r\n    const [message, setMessage] = React.useState('')\r\n    const handlerChange = (e: ChangeEvent<HTMLTextAreaElement>) => setMessage(e.currentTarget.value)\r\n    const handlerClick = () => {\r\n        addMessage(message)\r\n        setMessage('')\r\n    }\r\n    const handleEnterDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n        handleKeyDown(e, message)\r\n    }\r\n    return (\r\n        <div className={s.input}>\r\n            <textarea onKeyPress={handleEnterDown} className={s.textarea} value={message}\r\n                      onChange={handlerChange}/>\r\n            <button disabled={message.length === 0} onClick={handlerClick} className={s.button}>Send</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AddMessageForm;\r\n","import React, {useEffect} from 'react'\r\nimport Message from \"./Message\";\r\nimport AddMessageForm from \"./AddMessageForm\";\r\nimport {v1} from \"uuid\";\r\n\r\n\r\nexport interface messageDataType {\r\n    id: string\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string,\r\n}\r\n\r\nconst messageData = {\r\n    id: v1(),\r\n    avatar: 'https://i.pravatar.cc/300',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\n\r\nfunction HW1() {\r\n    const [post, setPost] = React.useState<messageDataType[]>([])\r\n    const [time, setTime] = React.useState <string>(\"\");\r\n    useEffect(() => {\r\n        setTime(getCurrentTime())\r\n    }, [])\r\n    const getCurrentTime = () => {\r\n        let today = new Date();\r\n        let hours = (today.getHours() < 10 ? '0' : '') + today.getHours();\r\n        let minutes = (today.getMinutes() < 10 ? '0' : '') + today.getMinutes();\r\n        let seconds = (today.getSeconds() < 10 ? '0' : '') + today.getSeconds();\r\n        return hours + ':' + minutes + ':' + seconds;\r\n    }\r\n    const addMessage = (text: string) => {\r\n        setTime(getCurrentTime());\r\n        setPost([...post, {...messageData, message: text, time: time, id: v1()}])\r\n    }\r\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>, text: string) => {\r\n        if (e.charCode === 13) addMessage(text)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            should work (должно работать)\r\n            {post.map(m =>\r\n                <Message\r\n                    key={m.id}\r\n                    avatar={m.avatar}\r\n                    name={m.name}\r\n                    message={m.message}\r\n                    time={m.time}\r\n                />)\r\n            }\r\n            <AddMessageForm\r\n                handleKeyDown={handleKeyDown}\r\n                addMessage={addMessage}\r\n            />\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType// need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nconst Affair: React.FC<AffairPropsType> = ({affair, deleteAffairCallback}) => {\r\n    const deleteCallback = () => {\r\n        deleteAffairCallback(affair._id)\r\n    }// need to fix\r\n    const priorityClass = s.block + ' ' + s[affair.priority]\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.title}>{affair.name}</div>\r\n            <div className={priorityClass}>[{affair.priority}]</div>\r\n            <button className={s.btn} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[]\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nconst Affairs: React.FC<AffairsPropsType> = ({data, setFilter, deleteAffairCallback}) => {\r\n    const mappedAffairs = data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        setFilter(\"all\")\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button className={s.filterBtn} onClick={setAll}>All</button>\r\n            <button className={s.filterBtn} onClick={setHigh}>High</button>\r\n            <button className={s.filterBtn} onClick={setMiddle}>Middle</button>\r\n            <button className={s.filterBtn} onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'middle' | 'low' // need to fix any\r\nexport type AffairType = { _id: number, name: string, priority: string } // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    return affairs.filter(f => f.priority === filter)\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\r\n    return affairs.filter(f => f._id !== _id) // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number\r\n    handlerBlurCallback: () => void// need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, handlerBlurCallback} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error === '' ? s.inputClass : s.inputClass + ' ' + s.error   // need to fix with (?:)\r\n    const disable = name.length < 2\r\n    const handlerBlur = () => handlerBlurCallback()\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div>\r\n                <input onBlur={handlerBlur}\r\n                       value={name}\r\n                       onChange={setNameCallback}\r\n                       className={inputClass}/>\r\n                <span className={s.textError}>{error}</span>\r\n            </div>\r\n            <button disabled={disable} className={s.btn} onClick={addUser}>add</button>\r\n            <span className={s.value}>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[] // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<any>('') // need to fix any\r\n    const [error, setError] = useState<any>('') // need to fix any\r\n\r\n    const handlerBlurCallback = () => name.length <= 1 ? setError('name is require') : setError(\"\")\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {// need to fix any\r\n        setName(e.currentTarget.value)\r\n        if (name.length <= 1) {\r\n            setError(\"name is require\")\r\n        } else {\r\n            setError(\"\")\r\n        }// need to fix\r\n    }\r\n    const addUser = () => {\r\n        alert(`Hello ${name} !`)\r\n        addUserCallback(name)\r\n        // need to fix\r\n    }\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            handlerBlurCallback={handlerBlurCallback}\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        setUsers([...users, {name: name, _id: v1()}]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}